#!/bin/bash

# TiLoKit Pre-commit Hook
# Runs basic checks before allowing commits

# ANSI color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Running pre-commit checks...${NC}"

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Not in a git repository${NC}"
    exit 1
fi

# Check for merge conflicts and whitespace issues
WHITESPACE_ISSUES=$(git diff --check --cached 2>&1 || true)
# Check for actual conflict markers (not in strings or comments)
CONFLICT_MARKERS=$(git diff --cached | grep -E '^\+[^#"'\'']*(<<<<<<< |=======$|>>>>>>> )' || true)

if [[ -n "$CONFLICT_MARKERS" ]]; then
    echo -e "${RED}‚ùå Merge conflict markers detected${NC}"
    echo -e "${YELLOW}üí° Please resolve merge conflicts before committing${NC}"
    echo "$CONFLICT_MARKERS"
    exit 1
fi

if [[ -n "$WHITESPACE_ISSUES" ]] && [[ "$WHITESPACE_ISSUES" != *"trailing whitespace"* ]]; then
    echo -e "${RED}‚ùå Git diff check failed${NC}"
    echo "$WHITESPACE_ISSUES"
    exit 1
fi

if [[ "$WHITESPACE_ISSUES" == *"trailing whitespace"* ]]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Trailing whitespace detected, auto-fixing...${NC}"
    # Auto-fix trailing whitespace
    git diff --cached --name-only | xargs -I {} sed -i '' 's/[[:space:]]*$//' {}
    echo -e "${GREEN}‚úÖ Trailing whitespace cleaned${NC}"
else
    echo -e "${GREEN}‚úÖ No whitespace issues found${NC}"
fi

# Check for Go syntax errors (if Go files are being committed)
GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$')
if [[ -n "$GO_FILES" ]]; then
    echo -e "${BLUE}üîç Checking Go syntax...${NC}"

    # Check if go is installed
    if ! command -v go &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  Go not found, skipping syntax check${NC}"
    else
        for file in $GO_FILES; do
            if [[ -f "$file" ]]; then
                if ! go syntax "$file" > /dev/null 2>&1; then
                    echo -e "${RED}‚ùå Go syntax error in: $file${NC}"
                    exit 1
                fi
            fi
        done
        echo -e "${GREEN}‚úÖ Go syntax check passed${NC}"
    fi
fi

# Check for large files (>10MB)
LARGE_FILES=$(git diff --cached --name-only | xargs -I {} find {} -size +10M 2>/dev/null)
if [[ -n "$LARGE_FILES" ]]; then
    echo -e "${RED}‚ùå Large files detected (>10MB):${NC}"
    echo "$LARGE_FILES"
    echo -e "${YELLOW}üí° Consider using Git LFS for large files${NC}"
    exit 1
fi

# Check for sensitive files
SENSITIVE_PATTERNS=(
    "*.key"
    "*.pem"
    "*.p12"
    "*.pfx"
    "*password*"
    "*secret*"
    ".env"
)

for pattern in "${SENSITIVE_PATTERNS[@]}"; do
    SENSITIVE_FILES=$(git diff --cached --name-only | grep -i "$pattern" || true)
    if [[ -n "$SENSITIVE_FILES" ]]; then
        echo -e "${RED}‚ùå Potentially sensitive files detected:${NC}"
        echo "$SENSITIVE_FILES"
        echo -e "${YELLOW}üí° Make sure these files don't contain secrets${NC}"
        echo -e "${YELLOW}üí° Consider adding them to .gitignore if they're sensitive${NC}"
        exit 1
    fi
done

echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
exit 0
