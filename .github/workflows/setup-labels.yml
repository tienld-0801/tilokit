name: 🏷️ Setup Repository Labels

on:
  workflow_dispatch: # Manual trigger only
  push:
    branches: [main, develop]
    paths: ['.github/workflows/setup-labels.yml']

permissions:
  issues: write

jobs:
  setup-labels:
    runs-on: ubuntu-latest
    
    steps:
      - name: Create or update labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = [
              { name: 'enhancement', color: '0075ca', description: '✨ New feature or request' },
              { name: 'bug', color: 'd73a4a', description: '🐛 Something isn\'t working' },
              { name: 'performance', color: 'f9d71c', description: '⚡ Performance improvements' },
              { name: 'refactoring', color: '7057ff', description: '♻️ Code refactoring' },
              { name: 'documentation', color: '0052cc', description: '📚 Improvements or additions to documentation' },
              { name: 'testing', color: 'ffffff', description: '🧪 Adding missing tests or correcting existing tests' },
              { name: 'build', color: 'fef2c0', description: '🔧 Changes that affect the build system' },
              { name: 'ci/cd', color: '006b75', description: '🔄 Changes to CI configuration files and scripts' },
              { name: 'maintenance', color: 'fbca04', description: '🏠 Other changes that don\'t modify src or test files' },
              { name: 'style', color: 'c2e0c6', description: '💄 Changes that do not affect the meaning of the code' },
              { name: 'revert', color: 'b60205', description: '⏪ Reverts a previous commit' }
            ];
            
            for (const label of labels) {
              try {
                // Try to get existing label
                await github.rest.issues.getLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name
                });
                
                // Update existing label
                await github.rest.issues.updateLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                
                console.log(`✅ Updated label: ${label.name}`);
              } catch (error) {
                if (error.status === 404) {
                  // Create new label
                  await github.rest.issues.createLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: label.name,
                    color: label.color,
                    description: label.description
                  });
                  
                  console.log(`🆕 Created label: ${label.name}`);
                } else {
                  console.error(`❌ Error with label ${label.name}:`, error.message);
                }
              }
            }
