name: 🔍 Validate Commits

on:
  # Only run on PRs - commits are already validated by pre-commit hooks
  # No need to re-validate when merging to develop
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-commits:
    runs-on: ubuntu-latest
    name: Validate Commit Messages

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for commit checking

      - name: 🔍 Validate commit messages
        env:
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: |
          echo "🔍 Validating commit messages..."
          chmod +x .husky/ci-check-commits.sh
          ./.husky/ci-check-commits.sh

      - name: 💬 Comment on PR (if validation fails)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = `## ❌ Commit Validation Failed

            Your commits don't follow the **MANDATORY EMOJI** commit format. Please fix them before merging.

            ### 📋 REQUIRED Format (Emoji is MANDATORY):
            \`emoji type: description\`

            ### ✅ Valid Types with Required Emojis:
            - \`✨ feat\`: new features
            - \`🐛 fix\`: bug fixes
            - \`📚 docs\`: documentation
            - \`♻️ refactor\`: code refactoring
            - \`⚡ perf\`: performance improvements
            - \`🧪 test\`: adding tests
            - \`🛠️ build\`: build system changes
            - \`🔄 ci\`: CI/CD changes
            - \`🧹 chore\`: maintenance tasks
            - \`🎨 style\`: code style changes
            - \`⏪ revert\`: reverting changes
            - \`🚀 release\`: version releases

            ### 📝 Examples (Emoji REQUIRED):
            - \`✨ feat: add user authentication\`
            - \`🐛 fix: resolve memory leak\`
            - \`📚 docs: update API documentation\`
            - \`🧹 chore: upgrade dependencies\`

            ### ❌ Invalid Examples:
            - \`feat: add feature\` (missing emoji)
            - \`🐛 docs: update\` (wrong emoji for docs type)

            ### 🔧 How to Fix:
            1. Use \`git rebase -i\` to edit commit messages
            2. Or squash commits with proper conventional format
            3. Force push the corrected commits

            For more details, check the [Conventional Commits](https://www.conventionalcommits.org) specification.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: ✅ Comment on PR (if validation passes)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = `## ✅ Commit Validation Passed

            All commits follow the conventional commit format! 🎉

            Thank you for following our commit standards. This helps with:
            - 📝 Automated changelog generation
            - 🏷️ Automatic PR labeling
            - 🚀 Better release notes
            - 📊 Project history tracking`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
