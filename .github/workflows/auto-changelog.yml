name: üìù Auto Generate Changelog

on:
  push:
    branches: [develop]
  pull_request:
    types: [closed]
    branches: [develop]

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event.pull_request.merged == true)
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install conventional-changelog-cli
        run: npm install -g conventional-changelog-cli

      - name: Generate changelog
        run: |
          # Generate changelog using .versionrc config
          conventional-changelog -p angular -i CHANGELOG.md -s --config .versionrc
          
          # Check if there are changes
          if git diff --quiet CHANGELOG.md; then
            echo "No changelog changes detected"
            exit 0
          fi

      - name: Commit and push changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add CHANGELOG.md
          git commit -m "docs(changelog): auto-update from conventional commits [skip ci]"
          git push

      - name: Create summary comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            // Read the updated changelog
            const changelog = fs.readFileSync('CHANGELOG.md', 'utf8');
            
            // Extract the latest changes (first section after Unreleased)
            const lines = changelog.split('\n');
            let latestChanges = [];
            let capturing = false;
            let sectionCount = 0;
            
            for (const line of lines) {
              if (line.startsWith('## [') && !line.includes('Unreleased')) {
                if (sectionCount === 0) {
                  capturing = true;
                  latestChanges.push(line);
                  sectionCount++;
                } else {
                  break;
                }
              } else if (capturing && line.startsWith('## [')) {
                break;
              } else if (capturing) {
                latestChanges.push(line);
              }
            }
            
            if (latestChanges.length > 0) {
              const changelogPreview = latestChanges.slice(0, 20).join('\n');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `üìù **Changelog Updated**\n\n` +
                      `The changelog has been automatically updated based on conventional commits:\n\n` +
                      `\`\`\`markdown\n${changelogPreview}\n\`\`\`\n\n` +
                      `View full changelog: [CHANGELOG.md](https://github.com/${context.repo.owner}/${context.repo.repo}/blob/develop/CHANGELOG.md)`
              });
            }
